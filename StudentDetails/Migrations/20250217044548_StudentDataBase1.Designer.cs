// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentDetails.Data;

#nullable disable

namespace StudentDetails.Migrations
{
    [DbContext(typeof(StudentDataDbContext))]
    [Migration("20250217044548_StudentDataBase1")]
    partial class StudentDataBase1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentDetails.Models.AddressData", b =>
                {
                    b.Property<int>("StudentAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentAddressId"));

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentAddressId");

                    b.ToTable("AddressGroups");

                    b.HasData(
                        new
                        {
                            StudentAddressId = 200,
                            AddressName = "Bangalore"
                        },
                        new
                        {
                            StudentAddressId = 201,
                            AddressName = "Vizag"
                        },
                        new
                        {
                            StudentAddressId = 202,
                            AddressName = "Hydrabad"
                        },
                        new
                        {
                            StudentAddressId = 203,
                            AddressName = "Cheinnai"
                        },
                        new
                        {
                            StudentAddressId = 204,
                            AddressName = "Mumbai"
                        });
                });

            modelBuilder.Entity("StudentDetails.Models.BloodGroupData", b =>
                {
                    b.Property<int>("StudentBloodGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentBloodGroupId"));

                    b.Property<string>("BloodGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentBloodGroupId");

                    b.ToTable("BloodGroups");

                    b.HasData(
                        new
                        {
                            StudentBloodGroupId = 300,
                            BloodGroupName = "O+ve"
                        },
                        new
                        {
                            StudentBloodGroupId = 301,
                            BloodGroupName = "A+ve"
                        },
                        new
                        {
                            StudentBloodGroupId = 302,
                            BloodGroupName = "AB+ve"
                        },
                        new
                        {
                            StudentBloodGroupId = 303,
                            BloodGroupName = "B+ve"
                        });
                });

            modelBuilder.Entity("StudentDetails.Models.DepartmentData", b =>
                {
                    b.Property<int>("StudentDepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentDepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentDepartmentId");

                    b.ToTable("DepartmentGroups");

                    b.HasData(
                        new
                        {
                            StudentDepartmentId = 100,
                            DepartmentName = "CSE"
                        },
                        new
                        {
                            StudentDepartmentId = 101,
                            DepartmentName = "ECE"
                        },
                        new
                        {
                            StudentDepartmentId = 102,
                            DepartmentName = "CIVIL"
                        },
                        new
                        {
                            StudentDepartmentId = 103,
                            DepartmentName = "MECH"
                        },
                        new
                        {
                            StudentDepartmentId = 104,
                            DepartmentName = "EEE"
                        });
                });

            modelBuilder.Entity("StudentDetails.Models.StudentData", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("StudentAddressId")
                        .HasColumnType("int");

                    b.Property<int>("StudentBloodGroupId")
                        .HasColumnType("int");

                    b.Property<int>("StudentDepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentYearId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("StudentAddressId");

                    b.HasIndex("StudentBloodGroupId");

                    b.HasIndex("StudentDepartmentId");

                    b.HasIndex("StudentYearId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            StudentAddressId = 200,
                            StudentBloodGroupId = 300,
                            StudentDepartmentId = 100,
                            StudentName = "Lakshmi Narayana",
                            StudentYearId = 404
                        },
                        new
                        {
                            StudentId = 2,
                            StudentAddressId = 202,
                            StudentBloodGroupId = 301,
                            StudentDepartmentId = 101,
                            StudentName = "Nilotpal",
                            StudentYearId = 402
                        },
                        new
                        {
                            StudentId = 3,
                            StudentAddressId = 201,
                            StudentBloodGroupId = 303,
                            StudentDepartmentId = 102,
                            StudentName = "Mani",
                            StudentYearId = 401
                        },
                        new
                        {
                            StudentId = 4,
                            StudentAddressId = 201,
                            StudentBloodGroupId = 303,
                            StudentDepartmentId = 106,
                            StudentName = "Mani",
                            StudentYearId = 401
                        });
                });

            modelBuilder.Entity("StudentDetails.Models.YearNameData", b =>
                {
                    b.Property<int>("StudentYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentYearId"));

                    b.Property<string>("YearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentYearId");

                    b.ToTable("YearNames");

                    b.HasData(
                        new
                        {
                            StudentYearId = 401,
                            YearName = "FirstYear"
                        },
                        new
                        {
                            StudentYearId = 402,
                            YearName = "SecondYear"
                        },
                        new
                        {
                            StudentYearId = 403,
                            YearName = "ThirdYear"
                        },
                        new
                        {
                            StudentYearId = 404,
                            YearName = "FouthYear"
                        });
                });

            modelBuilder.Entity("StudentDetails.Models.StudentData", b =>
                {
                    b.HasOne("StudentDetails.Models.AddressData", "AddressData")
                        .WithMany()
                        .HasForeignKey("StudentAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentDetails.Models.BloodGroupData", "BloodGroupData")
                        .WithMany()
                        .HasForeignKey("StudentBloodGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentDetails.Models.DepartmentData", "DepartmentData")
                        .WithMany()
                        .HasForeignKey("StudentDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentDetails.Models.YearNameData", "YearNameData")
                        .WithMany()
                        .HasForeignKey("StudentYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressData");

                    b.Navigation("BloodGroupData");

                    b.Navigation("DepartmentData");

                    b.Navigation("YearNameData");
                });
#pragma warning restore 612, 618
        }
    }
}
